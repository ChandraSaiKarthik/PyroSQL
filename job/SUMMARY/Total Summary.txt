SELECT
      sjob.[job_id] AS [JobID]
    , sjob.[name] AS [JobName]
    , sjst.[step_uid] AS [StepID]
    , sjst.[step_id] AS [StepNo]
    , sjst.[step_name] AS [StepName]
    , CASE sjst.[last_run_outcome]
        WHEN 0 THEN 'Failed'
        WHEN 1 THEN 'Succeeded'
        WHEN 2 THEN 'Retry'
        WHEN 3 THEN 'Canceled'
        WHEN 5 THEN 'Unknown'
      END AS [LastRunStatus]
 
   
   
   , sjst.[last_run_retries] AS [LastRunRetryAttempts]



    , CASE sjst.[last_run_date]
        WHEN 0 THEN NULL
        ELSE 
            CAST(
                CAST(sjst.[last_run_date] AS CHAR(8))
                + ' ' 
                + STUFF(
                    STUFF(RIGHT('000000' + CAST(sjst.[last_run_time] AS VARCHAR(6)),  6)
                        , 3, 0, ':')
                    , 6, 0, ':')
                AS DATETIME)
      END AS [LastRunDateTime_Start]

	   , STUFF(
            STUFF(RIGHT('000000' + CAST(sjst.[last_run_duration] AS VARCHAR(6)),  6)
                , 3, 0, ':')
            , 6, 0, ':')
      AS [LastRunDuration (HH:MM:SS)]


  ,  CASE sjst.[last_run_date]
        WHEN 0 THEN NULL
        ELSE 
            CAST(
                CAST(sjst.[last_run_date] AS CHAR(8))
                + ' ' 
                + STUFF(
                    STUFF(RIGHT('000000' + CAST(sjst.[last_run_time] AS VARCHAR(6)),  6)
                        , 3, 0, ':')
                    , 6, 0, ':')
                AS DATETIME)
      END + 

				STUFF(
            STUFF(RIGHT('000000' + CAST(sjst.[last_run_duration] AS VARCHAR(6)),  6)
                , 3, 0, ':')
            , 6, 0, ':')

      AS [LastRunDateTime_End]
	  , scat.category_class
	  ,	scat.category_type
	  ,	scat.name

	  , sjob.enabled
	  , ssch.enabled
	  -- TEST IF NextRunTime between bgin and win data times
	  , IIF( sjob.enabled = 0 OR ssch.enabled =0, 0, 1) AS willrun

	  , ssch.schedule_id
	  , ssch.name

	  ,ssch.[freq_type]
      ,ssch.[freq_interval]
      ,ssch.[freq_subday_type]
      ,ssch.[freq_subday_interval]
      ,ssch.[freq_relative_interval]
      ,ssch.[freq_recurrence_factor]

	  , CASE ssch.[enabled]
        WHEN 1 THEN 'Yes'
        WHEN 0 THEN 'No'
      END AS [IsEnabled]
    , CASE 
        WHEN ssch.[freq_type] = 64 THEN 'Start automatically when SQL Server Agent starts'
        WHEN ssch.[freq_type] = 128 THEN 'Start whenever the CPUs become idle'
        WHEN ssch.[freq_type] IN (4,8,16,32) THEN 'Recurring'
        WHEN ssch.[freq_type] = 1 THEN 'One Time'
      END [ScheduleType]
    , CASE ssch.[freq_type]
        WHEN 1 THEN 'One Time'
        WHEN 4 THEN 'Daily'
        WHEN 8 THEN 'Weekly'
        WHEN 16 THEN 'Monthly'
        WHEN 32 THEN 'Monthly - Relative to Frequency Interval'
        WHEN 64 THEN 'Start automatically when SQL Server Agent starts'
        WHEN 128 THEN 'Start whenever the CPUs become idle'
      END [Occurrence]
    , CASE [freq_type]
        WHEN 4 THEN 'Occurs every ' + CAST(ssch.[freq_interval] AS VARCHAR(3)) + ' day(s)'
        WHEN 8 THEN 'Occurs every ' + CAST(ssch.[freq_recurrence_factor] AS VARCHAR(3)) 
                    + ' week(s) on '
                    + CASE WHEN ssch.[freq_interval] & 1 = 1 THEN 'Sunday' ELSE '' END
                    + CASE WHEN ssch.[freq_interval] & 2 = 2 THEN ', Monday' ELSE '' END
                    + CASE WHEN ssch.[freq_interval] & 4 = 4 THEN ', Tuesday' ELSE '' END
                    + CASE WHEN ssch.[freq_interval] & 8 = 8 THEN ', Wednesday' ELSE '' END
                    + CASE WHEN ssch.[freq_interval] & 16 = 16 THEN ', Thursday' ELSE '' END
                    + CASE WHEN ssch.[freq_interval] & 32 = 32 THEN ', Friday' ELSE '' END
                    + CASE WHEN ssch.[freq_interval] & 64 = 64 THEN ', Saturday' ELSE '' END
        WHEN 16 THEN 'Occurs on Day ' + CAST(ssch.[freq_interval] AS VARCHAR(3)) 
                     + ' of every '
                     + CAST(ssch.[freq_recurrence_factor] AS VARCHAR(3)) + ' month(s)'
        WHEN 32 THEN 'Occurs on '
                     + CASE ssch.[freq_relative_interval]
                        WHEN 1 THEN 'First'
                        WHEN 2 THEN 'Second'
                        WHEN 4 THEN 'Third'
                        WHEN 8 THEN 'Fourth'
                        WHEN 16 THEN 'Last'
                       END
                     + ' ' 
                     + CASE [freq_interval]
                        WHEN 1 THEN 'Sunday'
                        WHEN 2 THEN 'Monday'
                        WHEN 3 THEN 'Tuesday'
                        WHEN 4 THEN 'Wednesday'
                        WHEN 5 THEN 'Thursday'
                        WHEN 6 THEN 'Friday'
                        WHEN 7 THEN 'Saturday'
                        WHEN 8 THEN 'Day'
                        WHEN 9 THEN 'Weekday'
                        WHEN 10 THEN 'Weekend day'
                       END
                     + ' of every ' + CAST(ssch.[freq_recurrence_factor] AS VARCHAR(3)) 
                     + ' month(s)'
      END AS [Recurrence]

      ,[active_start_date]
      ,[active_end_date]
      ,[active_start_time]
      ,[active_end_time]
	  ,sjst.subsystem
	  ,sjst.command 

	  ,shis.[instance_id]
      ,shis.[sql_message_id]
      ,shis.[sql_severity]
      ,shis.[message]
      ,shis.[run_status]
      ,shis.[run_date]
      ,shis.[run_time]
      ,shis.[run_duration]     
      ,shis.[server]

FROM
    [msdb].[dbo].[sysjobsteps] AS sjst
    INNER JOIN 
		[msdb].[dbo].[sysjobs] AS sjob
        ON sjst.[job_id] = sjob.[job_id]
	INNER JOIN 
		msdb.dbo.syscategories AS scat
		ON scat.category_id = sjob.category_id
	INNER JOIN	
		msdb.dbo.sysjobschedules AS sjsc
		ON sjsc.job_id = sjst.job_id
	INNER JOIN 
		msdb.dbo.sysschedules AS ssch
		ON ssch.schedule_id =  sjsc.schedule_id
	LEFT JOIN (
SELECT [instance_id]
      ,[job_id]
      ,[step_id]
      ,[sql_message_id]
      ,[sql_severity]
      ,[message]
      ,[run_status]
      ,[run_date]
      ,[run_time]
      ,[run_duration]     
      ,[server]
	  ,ROW_NUMBER() OVER (PARTITION BY job_id ORDER BY [run_date] DESC, [run_time] DESC) AS rn
  FROM [msdb].[dbo].[sysjobhistory]
) AS shis
ON sjob.job_id = shis.job_id
AND sjst.step_id = shis.step_id
WHERE 
shis.rn = 1 
ORDER BY 
	[JobName], [StepNo]